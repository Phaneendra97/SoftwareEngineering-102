version: "3"
services:
  node:
    container_name: node
    build:
      context: ./nodejs
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    logging:
      driver: "fluentd"
      options:
        fluentd-address: host.docker.internal:24224
    links:
      - fluentd
  react:
    build:
      context: ./reactjs/se-102
      dockerfile: Dockerfile
    ports:
      - "80:80"
  fluentd:
    container_name: fluentd
    platform: linux/amd64
    image: fluent/fluentd:v1.14.2-debian-1.0
    links:
      - "elasticsearch"
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    networks:
      - elastic
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
    ports:
      - "9200:9200"
    networks:
      - elastic
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=false
      - cluster.initial_master_nodes=es01
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.13.4
    links:
      - "elasticsearch"
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: http://es01:9200
    networks:
      - elastic
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - "3010:3000"
    volumes:
      - grafana_config:/etc/grafana
      - grafana_data:/var/lib/grafana
      - grafana_logs:/var/log/grafana

networks:
  elastic:
    driver: bridge

volumes:
  grafana_config:
  grafana_data:
  grafana_logs:
